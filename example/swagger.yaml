swagger: "2.0"
info:
  version: "4.0.0"
  title: Media v4
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /v4
# 
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: key
  APIKeyQueryParam:
    type: apiKey
    in: query
    name: key
security:
  - APIKeyHeader: []

x-models-info:
  $ref: 'https://stage-models.finect.com/version.json'
  
  
paths:
  /media/avatars:
    x-swagger-router-controller: images
    post:
      description: |
        Minimum size expeted: 
        - 150px x 150px
        
        Source image is resize to:
        - 150px x 150px
        - 132px x 132px
        - 114px x 114px
        - 96px x 96px
        - 84px x 84px
        - 72px x 72px
        - 60px x 60px
        - 48px x 48px
        - 36px x 36px
        - 24px x 24px
        
      summary: Upload avatar 
      consumes:
        - multipart/form-data       
      # used as the method name of the controller
      operationId: createAvatar
      parameters:
        - in: formData
          required: true
          name: upfile
          type: file
      responses:
        "201":
          description: Success
          schema:
            allOf:
            - $ref: "https://stage-models.finect.com/v2/commons/result.yaml#/definitions/Result"
            - properties:
                data:
                  properties:
                    id:
                      type: string
                      description: Image id
                    path:
                      type: string
                      description: path to minor image size.
          x-pm-test:
            - description: '[201] File uploaded'
              params:
                - name: upfile
                  in: formData
                  type: file
                  value: './avatar.jpg'                      
                      
        '400':
          description: Bad request.
          schema:
            $ref: "https://stage-models.finect.com/v2/commons/error.yaml#/definitions/Error"
          x-pm-test:
            - description: '[400] Bad request'
              params:
                - name: type
                  in: path
                  value: 'ZZZZZZZ'
                  
        '401':
          description: Unauthorized. Bearer token required.
          schema:
            $ref: "https://stage-models.finect.com/v2/commons/error.yaml#/definitions/Error"
          x-pm-test:
            - description: '[401] Unauthorized'    
            
        # responses may fall through to errors
        default:
          $ref: "https://stage-models.finect.com/v2/commons/responses.yaml#/responses/Error"  

  /media/avatars/{avatar}:
    x-swagger-router-controller: images
    delete:
      description: Remove old avatar
      summary: Remove avatar 
      # used as the method name of the controller
      operationId: removeAvatar
      parameters:
        - in: path
          required: true
          name: avatar
          type: string
          description: Id for old avatar
      responses:
        "204":
          description: Success
                      
        '404':
          description: Not found.
          schema:
            $ref: "https://stage-models.finect.com/v2/commons/error.yaml#/definitions/Error"          
                  
        '401':
          description: Unauthorized. Bearer token required.
          schema:
            $ref: "https://stage-models.finect.com/v2/commons/error.yaml#/definitions/Error"
          x-pm-test:
            - description: '[401] Unauthorized'    
            
        # responses may fall through to errors
        default:
          $ref: "https://stage-models.finect.com/v2/commons/responses.yaml#/responses/Error"  
 

  /media/images:
    x-swagger-router-controller: images
    post:
      description: |
        Upload image for content (message/article/question)
        
      summary: Upload image 
      consumes:
        - multipart/form-data       
      # used as the method name of the controller
      operationId: createImage
      parameters:
        - in: formData
          required: true
          name: upfile
          type: file
      responses:
        "201":
          description: Success
          schema:
            allOf:
            - $ref: "https://stage-models.finect.com/v2/commons/result.yaml#/definitions/Result"
            - properties:
                data:
                  properties:
                    id:
                      type: string
                      description: Image id
                    originalName:
                      type: string
                      description: Original file name.

        '400':
          description: Bad request.
          schema:
            $ref: "https://stage-models.finect.com/v2/commons/error.yaml#/definitions/Error"
          x-pm-test:
            - description: '[400] Bad request'
              params:
                - name: type
                  in: path
                  value: 'ZZZZZZZ'
                  
        '401':
          description: Unauthorized. Bearer token required.
          schema:
            $ref: "https://stage-models.finect.com/v2/commons/error.yaml#/definitions/Error"
          x-pm-test:
            - description: '[401] Unauthorized'    
            
        # responses may fall through to errors
        default:
          $ref: "https://stage-models.finect.com/v2/commons/responses.yaml#/responses/Error"  

  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions

